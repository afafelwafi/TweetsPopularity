
on:
  push:
    branches:
    - main
    - release/*
jobs:
  build_generator_job:
    name: build_generator_job
    runs-on: ubuntu-latest
    container: caracal97/env_build
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      
      - name: run
        run: g++ -o tweet-generator -O3 -Wall -std=c++17 `pkg-config --libs --cflags gaml cppkafka` -lpthread Generator/tweet-generator.cpp -lcppkafka -lrdkafka
  
      - name: Upload generator
        uses: actions/upload-artifact@v2
        with:
          name: generator
          path: Generator/tweet-generator
          
  build_collector_job:
    name: build_collector_job
    runs-on: ubuntu-latest
    container: caracal97/env_build
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      
      - name: run
        run: g++ -o tweet-collector -O3 -Wall -std=c++17 `pkg-config --libs --cflags gaml cppkafka` -lpthread Collector/tweet-collector.cpp -lcppkafka -lrdkafka
  
      - name: Upload collector
        uses: actions/upload-artifact@v2
        with:
          name: collector
          path: Collector/tweet-collector
          
          
 
  create_logger_docker_image_job:
    name: create_logger_docker_image_job
    runs-on: ubuntu-latest
    container: docker:latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: run 
        run:  cd Logger
      - name: run 
        run:  docker build -t $CI_REGISTRY_IMAGE/logger -f Dockerfile.logger .
      - name: run 
        run:  docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY     
      - name: run 
        run:  docker push $CI_REGISTRY_IMAGE/logger      

  create_generator_docker_image_job:
    name: create_generator_docker_image_job
    runs-on: ubuntu-latest
    container: docker:latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: run 
        run:  cd Generator
      - name: run 
        run:  docker build -t $CI_REGISTRY_IMAGE/generator -f Dockerfile.generator .
      - name: run 
        run:  ddocker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY  
      - name: run 
        run:  docker push $CI_REGISTRY_IMAGE/generator
     
     
